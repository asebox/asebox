<?xml version="1.0" encoding="UTF-8"?>
<MetricDescriptor>
  <metricName > RSTickets </metricName>
  <metricType > GENERIC </metricType>
  <SQL > <![CDATA[
set nocount on
declare @dbid int,  @dbname sysname, @rowcnt int

create table #RSTickets (
    dbname            sysname       not null
)

select dbid, name
into #db_cursor
from master..sysdatabases
where name != 'tempdb'
and status&1   != 1   -- database upgrading
and status&32   != 32   -- database created for load
and status&64   != 64   -- database recovery
and status&256   != 256   -- database suspect
and status&4096   != 4096   -- single user

and status2&16   != 16   -- database offline
and status2&32   != 32   -- database offline
and status2&512   != 512   -- database currently upgrading

and status3&2   != 2   -- ignore proxy database
and status3&4   != 4   -- ignore has proxy database
and status3&8   != 8   -- databse in shutdown
and status3&256 != 256 -- ignore user created tempdb
and status3&8192 != 8192 -- drop database in progress
and status3&4194304 != 4194304 -- ignore archive databases

-- and is_rep_agent_enabled(dbid) != 0 -- take only databases with repagent enabled. WORKS ONLY IF CALLED INSIDE A SYSTEM PROC
and name in (?DBLIST?)



-- use this simulated cursor to a avoid a stored proc and because a declare cursor must be alone in a batch
set rowcount 1
select @dbid=dbid, @dbname=name from #db_cursor
select @rowcnt=@@rowcount
delete #db_cursor
set rowcount 0

while @rowcnt = 1
begin
    exec ("exec "+@dbname+"..rs_ticket 'heartbeat'")

    insert #RSTickets values (@dbname)
    
    set rowcount 1
    select @dbid=dbid, @dbname=name from #db_cursor
    select @rowcnt=@@rowcount
    delete #db_cursor
    set rowcount 0
end
select * from #RSTickets
drop table #RSTickets
drop table #db_cursor
]]>
 </SQL>
  <key1 > </key1>
  <key2 > </key2>
  <key3 > </key3>
  <parameters>
     <param name="DBLIST"> '' </param>
  </parameters>
  <filterCol >  </filterCol>
  <delay > 60 </delay>
  <colsCalcDiff >                 
  </colsCalcDiff>
  <mandatoryConfigs>
  </mandatoryConfigs>

  <createTables>
    <T>
  create table ?SERVERNAME?_RSTickets (
     Timestamp         datetime not null,
     Interval          int      not null,   
     dbname            sysname  not null
  ) lock datapages
    </T>
  </createTables>

  <createIndexes>
     <I>
  create unique index idx on ?SERVERNAME?_RSTickets (Timestamp, dbname)
     </I>
  </createIndexes>

  <purge>
    <P table="?SERVERNAME?_RSLstCmt" >
  delete ?SERVERNAME?_RSTickets where Timestamp &lt; ?DATE?
    </P>
  </purge>

</MetricDescriptor>
