<?xml version="1.0" encoding="UTF-8"?>
<MetricDescriptor>
  <metricName > QPMetrics </metricName>
  <metricType > GENERIC </metricType>
  <SQL > <![CDATA[

set nocount on
declare @dbid int
declare @dbname varchar(30)
declare @rowcnt int
declare @msg varchar(1024)
create table #tmp_sysquerymetrics
(
	dbname varchar(30),
	uid     int,
	id      int,
	hashkey int, 
	cnt int	         	null, 
	lio_avg numeric(10)	null, 
	pio_avg numeric(10)	null, 
	exec_avg numeric(10)	null, 
	elap_avg numeric(10)	null
	)
select dbid, name into #db_cursor_qpmetrics from master..sysdatabases
where 1=1
		
and status&1    != 1     -- database upgrading
and status&32   != 32    -- database created for load
and status&64   != 64    -- database recovery
and status&256  != 256   -- database suspect
and status&4096 != 4096  -- single user
		
and status2&16  != 16    -- database offline
and status2&32  != 32    -- database offline
and status2&512 != 512   -- database currently upgrading
and status3&2   != 2     -- ignore proxy database
and status3&4   != 4     -- ignore has proxy database
and status3&8   != 8     -- databse in shutdown
and status3&256 != 256   -- ignore user created tempdb
and status3&8192 != 8192 -- drop database in progress
and status3&4194304 != 4194304 -- ignore archive databases
		

		
set rowcount 1
select @dbid=dbid, @dbname=name from #db_cursor_qpmetrics
select @rowcnt=@@rowcount
delete #db_cursor_qpmetrics
set rowcount 0
		
dbcc flushmetrics 
		
while @rowcnt = 1
begin
    		
    exec (" insert #tmp_sysquerymetrics select '"+@dbname+
    			"',uid, id, hashkey, cnt, lio_avg, pio_avg, exec_avg, elap_avg  from "+@dbname
    				+"..sysquerymetrics where (cnt>?min_usecount? or lio_avg >?min_logical_reads?)")
    		
    set rowcount 1
    select @dbid=dbid, @dbname=name from #db_cursor_qpmetrics
    select @rowcnt=@@rowcount
    delete #db_cursor_qpmetrics
    set rowcount 0
end
		
		
select dbname ,uid, id, hashkey, cnt , lio_avg , pio_avg , exec_avg , elap_avg   
from #tmp_sysquerymetrics
		
drop table #tmp_sysquerymetrics
drop table #db_cursor_qpmetrics 
		
]]>
 </SQL>

<key1 > hashkey </key1>
<key2 > dbname </key2>
<key3 > id </key3>

<filterCol > #filter_if_no_change# </filterCol>

<delay > 60 </delay>

<colsCalcDiff >
<COL> cnt </COL>
</colsCalcDiff>

<colsAlias> 
</colsAlias>

<mandatoryConfigs>
<config>enable metrics capture</config>
</mandatoryConfigs>

<parameters>
     <param name="min_logical_reads"> 10000 </param>
     <param name="min_usecount"> 10 </param>
</parameters>

<createTables>
<T>
create table ?SERVERNAME?_QPMetrics (
Timestamp     datetime not null,
Interval      int      not null,
dbname        varchar(30)  not NULL,
uid           int      not null,
id            int      not null,
hashkey       int      not null,
cnt           int      not null,       
lio_avg       int      not null,       
pio_avg       int      not null,       
exec_avg      int      not null,       
elap_avg      int      not null        
) lock datapages
</T>
</createTables>

<createIndexes>
<I>
create index idx on ?SERVERNAME?_QPMetrics (Timestamp, dbname, id, hashkey)
</I>
</createIndexes>

<purge>
<P table="?SERVERNAME?_QPMetrics" >
delete ?SERVERNAME?_QPMetrics where Timestamp &lt; ?DATE?
</P>
</purge>

</MetricDescriptor>








